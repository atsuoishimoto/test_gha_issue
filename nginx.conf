user nginx;
worker_processes auto;

error_log  /log/nginx_error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    server_tokens off;
    sendfile       on;
    tcp_nopush     on;

    keepalive_timeout 330s;

    types_hash_max_size 2048;

    gzip  on;
    gzip_comp_level 5;

    # proxy 経由のリクエストも圧縮する
    gzip_proxied  any;
    # headerに Vary:Accept-Encodingをつける
    gzip_vary  on;
    # 500Byte以上でGzipを有効
    gzip_min_length 500;
    # 圧縮を有効にするMINE-type（text/htmlは常時圧縮対象）
    gzip_types  text/plain
                text/css
                text/xml
                text/csv
                text/tab-separated-values
                text/javascript
                application/javascript
                application/json
                image/svg+xml;

    log_format healthd '$msec"$uri"'
                       '$status"$request_time"$upstream_response_time"'
                       '$http_x_forwarded_for';

    # log format V2
    log_format ltsv     "time:$time_iso8601\t"
                        "timestamp:$msec\t"
                        "remote_addr:$remote_addr\t"
                        "x_forwarded_for:$http_x_forwarded_for\t"
                        "x_forwarded_proto:$http_x_forwarded_proto\t"
                        "scheme:$scheme\t"
                        "method:$request_method\t"
                        "user:$remote_user\t"
                        "host:$host\t"
                        "path:$uri\t"
                        "query:$args\t"
                        # "req_body:$request_body\t"
                        "req_bytes:$request_length\t"
                        "connection:$connection\t"
                        "connection_requests:$connection_requests\t"
                        #"server_protocol:$server_protocol\t"
                        "referer:$http_referer\t"
                        #"cookie:$http_cookie\t"
                        "accept_language:$http_accept_language\t"
                        "user_agent:$http_user_agent\t"
                        "hostname:$hostname\t"
                        "status:$status\t"
                        "req_cache_control:$http_cache_control\t"
                        "res_cache_control:$sent_http_cache_control\t"
                        "res_bytes:$bytes_sent\t"
                        "res_body_bytes:$body_bytes_sent\t"
                        "res_content_encoding:$sent_http_content_encoding\t"
                        "res_content_type:$sent_http_content_type\t"
                        "location:$sent_http_location\t"
                        #"set_cookie:$sent_http_set_cookie\t"
                        "taken_time:$request_time\t"
                        "upstream_cache_status:$upstream_cache_status\t"
                        "upstream_addr:$upstream_addr\t"
                        "upstream_taken_time:$upstream_response_time";

    log_not_found   off;

    root /usr/share/nginx/html;

    upstream backend {
        server webapp:8000;
    }

    server {
        listen 80;
        server_name _;

        client_max_body_size 100m;
        client_header_buffer_size 2k;
        large_client_header_buffers 4 16k;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
            set $hour $4;
        }

        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        # nginxでのアクセスログを有効化するときはコメントアウトを外す
        # access_log /log/nginx_access.log  ltsv;

        location / {
            include uwsgi_params;
            uwsgi_pass backend;
            uwsgi_buffer_size 64k;
            uwsgi_buffers 100 64k;
            uwsgi_busy_buffers_size 128k;
            uwsgi_next_upstream off;
            uwsgi_connect_timeout 2s;
            uwsgi_send_timeout 20s;
            uwsgi_read_timeout 20s;

            # http-proxy利用時は上記uwsgi設定を消した上で下記のproxy設定を有効化すること
            # proxy_http_version 1.1;
            # proxy_redirect off;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
            # proxy_set_header Host $host;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_pass http://backend;
            # proxy_buffer_size 64k;
            # proxy_buffers 100 64k;
            # proxy_busy_buffers_size 128k;
            # proxy_next_upstream off;
            # proxy_connect_timeout 2s;
            # proxy_send_timeout 20s;
            # proxy_read_timeout 20s;
        }

        location = /stub_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
